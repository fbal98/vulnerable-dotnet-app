using MCD.ApiGateway.DBHandler.SQLite;
using MCD.ApiGateway.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Models;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using System.Text;

namespace WebApi.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class AuthController : ControllerBase
    {
        private readonly JwtTokenService _jwtTokenService;
        private readonly IAuthService _authService;
        public AuthController(JwtTokenService jwtTokenService, IAuthService authService)
        {
            _jwtTokenService = jwtTokenService ?? throw new ArgumentNullException(nameof(jwtTokenService));
            _authService = authService ?? throw new ArgumentNullException(nameof(authService));

        }

        // POST: /auth/login
        [HttpPost("login")]

        public ActionResult Login([FromBody] User user)
        {
            if (user == null)
            {
                return BadRequest("User is null");
            }

            var response = _authService.Login(user);

            return Ok(response);

        }

        // POST: /auth/register
        [HttpPost("register")]
        public ActionResult Register([FromBody] User user)
        {

            //check if user is null
            if (user == null)
            {
                return BadRequest("User is null");
            }

            var response = _authService.Register(user);


            return Ok(response);


        }
    }
}
